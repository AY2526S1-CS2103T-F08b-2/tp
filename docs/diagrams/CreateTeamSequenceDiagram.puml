@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":CreateTeamCommandParser" as CreateTeamCommandParser LOGIC_COLOR
participant "c:CreateTeamCommand" as CreateTeamCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
participant "t:Team" as Team MODEL_COLOR
end box

[-> LogicManager : execute("createTeam tn/TEAM_NAME hn/HACKATHON_NAME p/1 p/2")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("createTeam tn/TEAM_NAME hn/HACKATHON_NAME p/1 p/2")
activate AddressBookParser

create CreateTeamCommandParser
AddressBookParser -> CreateTeamCommandParser
activate CreateTeamCommandParser

CreateTeamCommandParser --> AddressBookParser
deactivate CreateTeamCommandParser

AddressBookParser -> CreateTeamCommandParser : parse("tn/TEAM_NAME hn/HACKATHON_NAME p/1 p/2")
activate CreateTeamCommandParser

create CreateTeamCommand
CreateTeamCommandParser -> CreateTeamCommand
activate CreateTeamCommand

CreateTeamCommand --> CreateTeamCommandParser :
deactivate CreateTeamCommand

CreateTeamCommandParser --> AddressBookParser : c
deactivate CreateTeamCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
CreateTeamCommandParser -[hidden]-> AddressBookParser
destroy CreateTeamCommandParser

AddressBookParser --> LogicManager : c
deactivate AddressBookParser

LogicManager -> CreateTeamCommand : execute(m)
activate CreateTeamCommand

CreateTeamCommand -> Model : getFilteredPersonList()
activate Model

Model --> CreateTeamCommand : lastShownList
deactivate Model

create Team
CreateTeamCommand -> Team : new Team(teamName, hackathonName, emptyMembers)
activate Team

Team --> CreateTeamCommand : t
deactivate Team

CreateTeamCommand -> Model : hasTeam(t)
activate Model

Model --> CreateTeamCommand : false
deactivate Model

CreateTeamCommand -> Model : addTeam(t)
activate Model

Model --> CreateTeamCommand
deactivate Model

loop for each person index
    CreateTeamCommand -> Model : addPersonToTeam(t, member)
    activate Model

    Model --> CreateTeamCommand : updatedTeam
    deactivate Model
end

CreateTeamCommand -> Model : updateFilteredTeamList(PREDICATE_SHOW_ALL_TEAMS)
activate Model

Model --> CreateTeamCommand
deactivate Model

create CommandResult
CreateTeamCommand -> CommandResult
activate CommandResult

CommandResult --> CreateTeamCommand
deactivate CommandResult

CreateTeamCommand --> LogicManager : r
deactivate CreateTeamCommand

[<--LogicManager
deactivate LogicManager

@enduml